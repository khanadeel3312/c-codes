 #include<iostream>
    #include<vector>
#include <algorithm>
    using namespace std;
    bool ispossible(vector<int> arr,int m,int mid){
        int totalwood=0;
        for(int i=0;i<arr.size();i++){
            if(arr[i]>mid){
            totalwood+=(arr[i]-mid);
            }
        }
        if(totalwood>=m){
                return true;
            }
        return false;
        
    }
    int findmaxlen(vector<int> arr,int m)
    {
        sort(arr.begin(),arr.end());
        int s=0;
        int maxi=-1;
        for(int i=0;i<arr.size();i++){
            maxi=max(maxi,arr[i]);
        }
        int e=maxi;
        int ans;

    while(s<=e){
        int mid=s+(e-s)/2;
        if(ispossible(arr,m,mid)){
            ans=mid;
            s=mid;
        }
        else{
            e=mid-1;
        }
        
    }return ans;}
    int main() {
    vector<int> treeHeights = {20, 15, 10, 17};
    int M = 7;

    int maxHeight = findmaxlen(treeHeights, M);
    cout << "Maximum integer height of the sawblade: " << maxHeight << endl;

    return 0;
}